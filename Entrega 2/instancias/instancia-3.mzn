int: I = 31;
int: J = 14;
set of int: empleados = 1..I;
set of int: tareas = 1..J;
array[1..I] of float: E = [4, 4, 7, 4, 6, 4, 7, 4, 7, 7, 3, 5, 6, 7, 3, 3, 5, 7, 2, 4, 6, 3, 4, 6, 4, 6, 4, 6, 5, 4, 4];
array[1..J] of float: S = [5, 2, 5, 1, 2, 6, 3, 2, 1, 3, 2, 2, 1, 2];
array[1..J] of float: T = [440, 250, 160, 550, 400, 500, 140, 180, 220, 360, 130, 270, 280, 280];
array[1..I] of float: H = [670, 720, 610, 610, 640, 720, 640, 690, 620, 680, 600, 710, 660, 620, 600, 660, 600, 600, 620, 680, 710, 640, 730, 650, 680, 640, 730, 700, 710, 720, 620];
array[empleados,tareas] of float: C = [|7881, 4562, 4247, 5643, 4355, 6916, 4044, 5908, 4364, 7093, 4628, 6096, 4125, 5656|4387, 6542, 6035, 5339, 5145, 7563, 7532, 6161, 4085, 4788, 4504, 7511, 4633, 6582|4213, 4646, 5533, 7211, 4497, 6774, 4958, 6413, 4367, 5742, 6992, 7390, 5381, 6092|4289, 6901, 7073, 7606, 6580, 7542, 4828, 4218, 5945, 6445, 5823, 4755, 6717, 7429|6425, 4722, 7856, 5579, 6791, 7982, 7219, 5896, 4569, 4350, 5088, 7489, 6187, 5805|7306, 5273, 5710, 6001, 4890, 5056, 4713, 4519, 5165, 6736, 7367, 6338, 7827, 5943|6542, 7241, 4481, 7889, 5597, 7215, 6382, 6281, 6800, 6086, 4824, 7318, 7829, 7807|4356, 6177, 6779, 6260, 5544, 4907, 6288, 4275, 4769, 4868, 6573, 6653, 7799, 5561|7936, 4983, 5224, 5406, 5469, 4554, 5058, 7457, 5514, 7911, 4435, 5970, 4062, 6688|6094, 5882, 6892, 7172, 4012, 7709, 7606, 4273, 6972, 4632, 6250, 4632, 7518, 7198|7803, 5138, 7663, 5509, 5808, 4031, 5408, 4684, 7874, 4923, 5398, 7819, 6881, 5828|5025, 6866, 5542, 6928, 5972, 5712, 6059, 6931, 4813, 7687, 5042, 4479, 4479, 5976|4232, 6904, 6398, 5678, 4165, 4292, 5503, 4112, 7875, 6950, 5408, 7555, 4906, 5867|4805, 4021, 7718, 6855, 5532, 4679, 7192, 5950, 5129, 7700, 5036, 6075, 7138, 6520|6079, 6952, 7993, 4285, 6819, 4228, 5229, 7669, 7607, 4817, 4562, 6924, 6971, 4385|7863, 6488, 5298, 6266, 6209, 6699, 7945, 7652, 7088, 4270, 6318, 5588, 6265, 5252|7638, 7231, 4951, 6709, 6624, 7402, 6302, 5618, 7329, 4891, 6207, 7171, 7772, 6371|6626, 5208, 4587, 4952, 7243, 6944, 4496, 5013, 7447, 7639, 6586, 4069, 6131, 6085|7442, 5843, 6424, 4045, 6796, 7868, 7034, 4701, 6525, 5543, 4730, 7143, 4886, 4247|5730, 7671, 7918, 5233, 6114, 5134, 5311, 5329, 4783, 6047, 6508, 6554, 7286, 4286|7264, 5474, 7160, 5827, 7530, 4649, 4195, 5712, 4739, 6091, 6617, 6543, 6216, 5025|6463, 6851, 6324, 6394, 6997, 4749, 5871, 5562, 4697, 5133, 5219, 5001, 4060, 7975|5852, 7443, 6777, 7193, 5669, 6099, 8000, 4507, 7846, 5866, 4474, 5206, 5223, 6492|4517, 6775, 7005, 4038, 6452, 6083, 5802, 4158, 6948, 6167, 7134, 6434, 5921, 7020|4451, 4237, 4879, 5616, 4496, 5314, 7545, 5473, 4053, 6482, 7945, 7393, 4867, 4883|6194, 4515, 6292, 5370, 5527, 5845, 6245, 7307, 7797, 7993, 5859, 7999, 5390, 7321|5469, 4472, 6204, 4872, 6930, 5140, 5668, 5693, 6639, 6745, 6127, 4437, 6266, 6551|6368, 6614, 6778, 4356, 6874, 4005, 6694, 5391, 5657, 7275, 7333, 5475, 6320, 5616|4893, 6929, 4491, 5493, 5249, 6966, 4530, 6213, 4364, 5184, 6380, 4739, 5526, 6751|6165, 5119, 4899, 7360, 5724, 7061, 7294, 6554, 5888, 4296, 4086, 6231, 5356, 7399|6991, 5880, 7179, 6960, 6933, 5015, 6174, 6795, 6767, 4889, 5819, 5164, 5990, 4416|];
array[1..I] of float: U = [21.258382291009962, 24.859384432819436, 35.46120840835732, 22.32612245351364, 33.159994862379804, 21.934240168125864, 35.7893821117589, 22.39347412913975, 37.69075458581325, 39.75933605973338, 18.42115053245384, 27.288903935279873, 32.313473586110476, 35.89638764896424, 19.924555642917923, 19.99379505852202, 28.26877134728053, 39.05552983232071, 11.626614783360345, 20.308257071607876, 30.696498832015475, 16.01334321560097, 20.200035443682467, 33.522878832433754, 20.990642977362334, 31.272251175133427, 24.25815803889659, 33.286766695459576, 29.031246961286442, 21.576705617092728, 24.037366112837343];
array[tareas] of float: O = [10700, 12595, 25066, 28421, 17642, 28928, 15615, 11756, 23254, 18427, 21893, 17699, 28673, 27502];
int: P = 207824;
int: N=4;
array[empleados,tareas] of var 0..1: x;
array[empleados,tareas] of var float: y;
var float: funcob = sum ([ sum ([ C[i,j]*x[i,j] + U[i]*y[i,j] | j in 1..J]) | i in 1..I]);
constraint forall(j in 1..J)(sum([ y[i,j] | i in 1..I]) >= T[j]);
constraint forall(i in 1..I)(sum([y[i,j] | j in 1..J ]) <= H[i]);
constraint forall(i in 1..I)(forall(j in 1..J) ( x[i,j]*E[i] - x[i,j]*S[j] >= 0));
constraint forall(i in 1..I)(forall(j in 1..J)( y[i,j] <= T[j]*x[i,j] ));
constraint forall(i in 1..I)( sum([ x[i,j] | j in 1..J]) <= N );
constraint  sum ([ sum ([ C[i,j]*x[i,j] + U[i]*y[i,j] + bool2int(E[i]>S[j])*O[j]*x[i,j]| j in 1..J]) | i in 1..I]) <= P;
constraint forall(j in 1..J)( sum([ x[i,j] | i in 1..I]) <= 2 * I / 3 );
solve minimize funcob;
output ["xij = \(x)\n", "yij = \(y)\n", "costos = \(funcob)"]
